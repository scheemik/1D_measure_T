#!/bin/bash
#SBATCH --account=def-ngrisoua
#SBATCH --mail-user=mschee@physics.utoronto.ca
#SBATCH --mail-type=ALL
#SBATCH --output=_experiments/%x/_%x_%j.out						# %x = job_name, %j = job_number
#SBATCH --ntasks-per-node=32
#SBATCH --nodes=1
#SBATCH --time=0-00:05  # d-HH:MM

# Submit this script to a HPC with `sbatch`
# Takes in optional arguments:
#	$ sh HPC_lanceur.slrm -e <name of experiment> 				Default: current datetime
#								  			-s <number of simulations>      Default: 5
#								  			-c <number of cores>            Default: 32
#								  			-r <run simulation>             Default: False
#             	  			-m <merge h5 files>             Default: False
#								  			-o <post-process data>          Default: False
#								  			-p <plot simulation>            Default: False
#             	  			-g <create gif>                 Default: False
#             	  			-v <create video, mp4>          Default: False

# Current datetime
DATETIME=`date +"%Y-%m-%d_%Hh%M"`
echo "Launched script: $DATETIME"

# Having a ":" after a flag means an option is required to invoke that flag
while getopts e:s:c:rmopgv option
do
	case "${option}"
		in
		e) EXP=${OPTARG};;
		s) SIMS=${OPTARG};;
		c) CORES=${OPTARG};;
		r) RUN=r;;
    m) MER=m;;
    o) PRO=o;;
    p) PLT=p;;
    g) GIF=g;;
    v) VID=v;;
	esac
done

# check to see if arguments were passed
if [ -z "$EXP" ]
then
	EXP=$DATETIME
#	echo "-e, No name specified, using EXP=$EXP"
#else
#  echo "-e, Name specified, using EXP=$EXP"
fi
if [ -z "$SIMS" ]
then
	SIMS=5
#	echo "-s, No number of simulations specified, using SIMS=$SIMS"
#else
#  echo "-s, Number of simulations specified, using SIMS=$SIMS"
fi
if [ -z "$CORES" ]
then
	CORES=32
# 	echo "-c, No number of cores specified, using CORES=$CORES"
# else
#  echo "-c, Number of cores specified, using CORES=$CORES"
fi
if [ "$RUN" = r ]
then
	ARGS=true
#	echo "-r, Run the simulation"
fi
if [ "$MER" = m ]
then
	ARGS=true
#	echo "-m, Merge the data"
fi
if [ "$PRO" = o ]
then
	ARGS=true
#	echo "-o, Post-process data"
fi
if [ "$PLT" = p ]
then
	ARGS=true
#	echo "-p, Plot the simulation"
fi
if [ "$GIF" = g ]
then
	ARGS=true
#	echo "-g, Create gif of simulation"
fi
if [ "$VID" = v ]
then
	ARGS=true
#	echo "-v, Create video (mp4) of the simulation"
fi

###############################################################################
# Load module stack for Graham
# module loading sets values of environment variables
#   so have these commands before the `export` lines
# module purge		# problem purging modules, might need to use module --force purge
# module load python/3.7.0 scipy-stack fftw-mpi mpi4py
module load mpi4py
module load StdEnv/2020
module load python/3.7.7

export FFTW_PATH=$EBROOTFFTW
export MPI_PATH=$EBROOTOPENMPI
export FFTW_STATIC=1
export OMPI_MCA_mpi_warn_on_fork=0
# export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK

# Activate the Dedalus virtual environment
# source ${HOME}/Dedalus_Projects/venv/bin/activate
source ~/projects/def-ngrisoua/mschee/Dedalus_repos/2020a-dedalus/bin/activate

# Check which version of python is installed
# echo python3 --version

###############################################################################
# Start the experiment script
if [ "$ARGS" = true ]
then
	bash ./exp_run.sh -e $EXP -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
else
	bash ./exp_run.sh -e $EXP -s $SIMS -c $CORES
fi
