#!/bin/bash
#SBATCH --account=def-ngrisoua
#SBATCH --mail-user=mschee@physics.utoronto.ca
#SBATCH --mail-type=ALL
#SBATCH --output=_experiments/%x/_%x_%j.out						# %x = job_name, %j = job_number
#SBATCH --ntasks-per-node=4
#SBATCH --nodes=1
#SBATCH --time=0-00:09  # d-HH:MM

# Submit this script to a HPC with `sbatch`
# Takes in optional arguments:
#	$ sh HPC_lanceur.slrm -e <name of experiment> 				Default: current datetime
#								  			-s <number of simulations>      Default: 5
#								  			-c <number of cores>            Default: 32
#								  			-r <run simulation>             Default: False
#             	  			-m <merge h5 files>             Default: False
#								  			-o <post-process data>          Default: False
#								  			-p <plot simulation>            Default: False
#             	  			-g <create gif>                 Default: False
#             	  			-v <create video, mp4>          Default: False

# Current datetime
DATETIME=`date +"%Y-%m-%d_%Hh%M"`
echo "Launched script: $DATETIME"

# Having a ":" after a flag means an option is required to invoke that flag
while getopts e:s:c:rmopgv option
do
	case "${option}"
		in
		e) EXP=${OPTARG};;
		s) SIMS=${OPTARG};;
		c) CORES=${OPTARG};;
		r) RUN=r;;
    m) MER=m;;
    o) PRO=o;;
    p) PLT=p;;
    g) GIF=g;;
    v) VID=v;;
	esac
done

# check to see if arguments were passed
if [ -z "$EXP" ]
then
	EXP=$DATETIME
fi
if [ -z "$SIMS" ]
then
	SIMS=5
fi
if [ -z "$CORES" ]
then
	CORES=32
fi
# Check for run arguments
if [ "$RUN" = r ] || [ "$MER" = m ] || [ "$PRO" = o ] || [ "$PLT" = p ] || [ "$GIF" = g ] || [ "$VID" = v ]
then
	ARGS=true
fi

###############################################################################
# Load module stack for Graham
# module loading sets values of environment variables
#   so have these commands before the `export` lines
module load mpi4py
module load StdEnv/2020
module load python/3.7.7

export FFTW_PATH=$EBROOTFFTW
export MPI_PATH=$EBROOTOPENMPI
export FFTW_STATIC=1
export OMPI_MCA_mpi_warn_on_fork=0
# export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK

# Activate the Dedalus virtual environment
source ~/projects/def-ngrisoua/mschee/Dedalus_repos/2020a-dedalus/bin/activate

###############################################################################
# Start the experiment script

# Path to experiment directory
EXP_PATH="_experiments/${EXP}"
# Format number of simulations with correct number of digits
printf -v PSIMS "%03d" $SIMS
# Execute serial scripts in parallel
parallel --joblog ${EXP_PATH}/${SLURM_JOBID}.log "cd ${EXP_PATH}/{}_$EXP && bash run.sh -e $EXP -i {} -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID" ::: {000..007}

# if [ "$ARGS" = true ]
# then
# 	# EXECUTION COMMAND - DON'T USE THIS ONE
# 	parallel --joblog ${EXP_PATH}/_${EXP}_${SLURM_JOBID}.log -j $SLURM_TASKS_PER_NODE <<-EOF
# 	  cd ${EXP_PATH}/000_$EXP && bash run.sh -e $EXP -i 000 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 	  cd ${EXP_PATH}/001_$EXP && bash run.sh -e $EXP -i 001 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 		cd ${EXP_PATH}/002_$EXP && bash run.sh -e $EXP -i 002 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 		cd ${EXP_PATH}/003_$EXP && bash run.sh -e $EXP -i 003 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 		cd ${EXP_PATH}/004_$EXP && bash run.sh -e $EXP -i 004 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 		cd ${EXP_PATH}/005_$EXP && bash run.sh -e $EXP -i 005 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 		cd ${EXP_PATH}/006_$EXP && bash run.sh -e $EXP -i 006 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 		cd ${EXP_PATH}/007_$EXP && bash run.sh -e $EXP -i 007 -s $SIMS -c $CORES -$RUN$MER$PRO$PLT$GIF$VID
# 	EOF
# else
# 	# EXECUTION COMMAND - DON'T USE THIS ONE
# 	parallel --joblog ${EXP_PATH}/_${EXP}_${SLURM_JOBID}.log -j $SLURM_TASKS_PER_NODE <<-EOF
# 	  cd ${EXP_PATH}/000_$EXP && bash run.sh -e $EXP -i 000 -s $SIMS -c $CORES
# 	  cd ${EXP_PATH}/001_$EXP && bash run.sh -e $EXP -i 001 -s $SIMS -c $CORES
# 		cd ${EXP_PATH}/002_$EXP && bash run.sh -e $EXP -i 002 -s $SIMS -c $CORES
# 		cd ${EXP_PATH}/003_$EXP && bash run.sh -e $EXP -i 003 -s $SIMS -c $CORES
# 		cd ${EXP_PATH}/004_$EXP && bash run.sh -e $EXP -i 004 -s $SIMS -c $CORES
# 		cd ${EXP_PATH}/005_$EXP && bash run.sh -e $EXP -i 005 -s $SIMS -c $CORES
# 		cd ${EXP_PATH}/006_$EXP && bash run.sh -e $EXP -i 006 -s $SIMS -c $CORES
# 		cd ${EXP_PATH}/007_$EXP && bash run.sh -e $EXP -i 007 -s $SIMS -c $CORES
# 	EOF
# fi
